
//------------------------------------------------------------------------------

//  <auto-generated>
//      This code was generated by:
//        TerminalGuiDesigner v1.0.18.0
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// -----------------------------------------------------------------------------
namespace sample01 {
    using System;
    using Terminal.Gui;
    using Attribute = Terminal.Gui.Attribute;
    
    
    public partial class MyView : Terminal.Gui.Window {

        private Window window1;
        private ListView listview1;
        private CheckBox _customRenderCB;
        private CheckBox _allowMarkingCB;
        private CheckBox _allowMultipleCB;
        public List<_Data> data;


        private void InitializeComponent() {
            this.window1 = new Terminal.Gui.Window();
            this.Width = Dim.Fill(0);
            this.Height = Dim.Fill(0);
            this.X = 0;
            this.Y = 0;
            this.Modal = false;
            this.Text = "";
            this.Border.BorderStyle = Terminal.Gui.BorderStyle.Single;
            this.Border.Effect3D = false;
            this.Border.DrawMarginFrame = true;
            this.TextAlignment = Terminal.Gui.TextAlignment.Left;
            this.Title = "Press Ctrl+Q to quit";
            _customRenderCB = new CheckBox ("Use custom rendering") {
                X = 0,
                Y = 0,
                Height = 1,
            };
            window1.Add(_customRenderCB);
			_customRenderCB.Toggled += _customRenderCB_Toggled;

            _allowMarkingCB = new CheckBox("Allow Marking") {
                X = Pos.Right (_allowMarkingCB) +  1,
                Y = 0,
                Height = 1,
                Visible = _allowMarkingCB.Checked
            };
            this.window1.Add(_allowMultipleCB);
            this._allowMultipleCB.Toggled += AllowMultipleCB_Toggle;

            this.listview1 = new ListView () {
                X = 1,
                Y = 2,
                Height = Dim.Fill (),
                Width = Dim.Fill (1),

                AllowsMarking = false,
                AllowsMultipleSelection = false,
            };
            this.listview1.RowRender += ListView_RowRender;

            this.window1.Add(this.listview1);
            this.Add(this.window1);

            // this.Add(this.listview1);
        }

        private void _customeRenderCB_Toggled (bool prev) {
            // if(prev) {
            //     this.listview1.SetSource();
            // }
            // else {
            // }
        }

        private void AllowMultipleCB_Toggle (bool prev) {

        }

        private void ListView_RowRender (ListViewRowEventArgs obj)
        {
            if (obj.Row == listview1.SelectedItem) {
                return;
            }
            if (listview1.AllowsMarking && listview1.Source.IsMarked (obj.Row)) {
                obj.RowAttribute = new Attribute (Color.BrightRed, Color.BrightYellow);
                return;
            }
            if (obj.Row % 2 == 0) {
                obj.RowAttribute = new Attribute (Color.BrightGreen, Color.Magenta);
            } else {
                obj.RowAttribute = new Attribute (Color.BrightMagenta, Color.Green);
            }
        }
        private void _customRenderCB_Toggled (bool prev) {
            if (prev) {

            }
            else {
            }
            this.window1.SetNeedsDisplay();
        }
    }
    public class _Data {
        private string Name {get; set;}
        private int Price {get; set;}
    }

}
