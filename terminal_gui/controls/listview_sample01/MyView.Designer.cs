
//------------------------------------------------------------------------------

//  <auto-generated>
//      This code was generated by:
//        TerminalGuiDesigner v1.0.18.0
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// -----------------------------------------------------------------------------
namespace listview_sample01 {
    using System;
    using Terminal.Gui;
    
    
    public partial class MyView : Terminal.Gui.Window {
        
        private ListView listview01;
        
        private void InitializeComponent() {
            this.listview01 = new ListView();
            this.Width = Dim.Fill(0);
            this.Height = Dim.Fill(0);
            this.X = 0;
            this.Y = 0;
            this.Modal = false;
            this.Text = "";
            this.Border.BorderStyle = Terminal.Gui.BorderStyle.Single;
            this.Border.Effect3D = false;
            this.Border.DrawMarginFrame = true;
            this.TextAlignment = Terminal.Gui.TextAlignment.Left;
            this.Title = "Press Ctrl+Q to quit";
        }
    }

    public class FancyListRendering : List<string>, IListDataSource
    {
        public int Length => Count;
    
        public bool IsMarked(int item) {
            return false;
        }

        public void Render(ListView container, ConsoleDriver driver, bool selected, int item, int col, int line, int width, int start = 0) {
            if (item >= Count) {
                return;
            }

            var str = this[item];
    
    	    if (str.Length > width) {
                str = str.Substring(0, width);
            }
            else {
                str = str.PadRight(width, ' ');
            }
    
            container.Move(col, line);
    
            if(item == container.SelectedItem) {
                driver.SetAttribute(new Terminal.Gui.Attribute(Color.Cyan, Color.BrightBlue));
                // example of changing the string that we render to something else
                driver.AddStr("OMG YOUR ABOUT TO SELECT IT!");
            }
            else {
                // alternate the colors
                if (item % 2 == 0) {
                    driver.SetAttribute(new Terminal.Gui.Attribute(Color.Green, Color.Blue));
                }
                else {
                    driver.SetAttribute(new Terminal.Gui.Attribute(Color.Blue, Color.Green));
                }

                driver.AddStr(str);
            }
        }

        public void SetMark(int item, bool value) {
            // choosing not to support marking
        }
        
        public IList ToList() {
            return this;
        }
    }
}
